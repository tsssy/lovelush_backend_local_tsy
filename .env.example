# =============================================================================
# Environment Configuration Template
# =============================================================================
# Copy this file to .env and update the values for your environment
# ```bash
# cp .env.example .env
# ```
#
# Useful Commands:
# - Generate SECRET_KEY: python -c "import secrets; print(secrets.token_hex(32))"
# - Generate TELEGRAM_WEBHOOK_SECRET: python -c "import secrets; print(secrets.token_urlsafe(32))"
# - Get Telegram bot token: Message @BotFather on Telegram
#
# Pusher Configuration Notes:
# - PUSHER_HOST: Internal host for backend-to-Pusher connections (use IP/localhost)
# - PUSHER_EXTERNAL_HOST: External host returned to frontend clients (domain only, e.g. "yourdomain.com")
# - PUSHER_EXTERNAL_WS_PATH: WebSocket path for HTTP connections (ws://)
# - PUSHER_EXTERNAL_WSS_PATH: WebSocket path for HTTPS connections (wss://)
# - PUSHER_EXTERNAL_PORT: Only needed if not using standard ports (80/443)
# - For production with nginx: Set PUSHER_EXTERNAL_HOST to your domain
# - Common scenarios: HTTP="/ws", HTTPS="/wss" OR both="/ws"
# - Separate WS/WSS paths allow different routing for HTTP vs HTTPS environments
# =============================================================================

# Application Configuration
APP_NAME=LoveLush Backend
APP_VERSION=1.0.0
APP_ROOT_PATH=
DEBUG=True

# Proxies Configuration (for development only)
HTTP_PROXY=
HTTPS_PROXY=

# Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=
LOG_COLORS=true

# Database Configuration
MONGO_URI=mongodb://localhost:27017/?directConnection=true
MONGODB_NAME=lovelush
MONGODB_USERNAME=
MONGODB_PASSWORD=

# Security Configuration
SECRET_KEY=your-super-secret-key-change-in-production-please
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# CORS Configuration
CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]

# Telegram Configuration
TELEGRAM_BOT_TOKEN=your-telegram-bot-token-here
TELEGRAM_WEBHOOK_URL=https://your-domain.com/api/v1/telegram/webhook
TELEGRAM_WEBHOOK_SECRET=your-webhook-secret-here
TELEGRAM_MINI_APP_URL=https://t.me/your-bot-name/your-miniapp-name

# Pusher/Soketi Configuration (for IM system)
PUSHER_APP_ID=app-id
PUSHER_KEY=app-key
PUSHER_SECRET=app-secret
PUSHER_CLUSTER=mt1

# Internal configuration (backend connections to Pusher server)
PUSHER_HOST=127.0.0.1
PUSHER_PORT=6001

# External configuration (returned to frontend clients via /pusher/config)
PUSHER_EXTERNAL_HOST=localhost
PUSHER_EXTERNAL_WS_PATH=/ws
PUSHER_EXTERNAL_WSS_PATH=/ws
PUSHER_EXTERNAL_PORT=6001

# TLS Configuration
PUSHER_USE_TLS=false  # Internal TLS (backend to soketi) - usually false
PUSHER_EXTERNAL_USE_TLS=true  # External TLS (frontend connections) - usually true in production

# S3-Compatible Storage Configuration (AWS S3, Cloudflare R2, etc.)
# For Cloudflare R2:
# - S3_ENDPOINT_URL: https://<account-id>.r2.cloudflarestorage.com
# - S3_PUBLIC_URL: https://<custom-domain> or https://pub-<hash>.r2.dev
# For AWS S3:
# - S3_ENDPOINT_URL: (leave empty for default)
# - S3_PUBLIC_URL: https://<bucket-name>.s3.<region>.amazonaws.com
S3_ENDPOINT_URL=
S3_ACCESS_KEY_ID=
S3_SECRET_ACCESS_KEY=
S3_BUCKET_NAME=
S3_PUBLIC_URL=
